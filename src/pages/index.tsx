import Head from "next/head";
import { addApolloState, initializeApollo } from "@/lib/graphql/apolloClient";
import {
  FilmsDocument,
  PlanetsDocument,
  useFilmsQuery,
  usePlanetsQuery,
} from "@/__generated__/graphql";

const Component2 = () => {
  const { data } = usePlanetsQuery();

  return (
    <div>
      <p>Component1</p>
      <ul>
        {data?.allPlanets?.planets?.map((p) => (
          <li key={p?.id}>
            <p>
              Name <span>{p?.name}</span>
            </p>
            <p>
              Population <span>{p?.population}</span>
            </p>
          </li>
        ))}
      </ul>
    </div>
  );
};

const Component1 = () => {
  return (
    <div>
      <p>Component2</p>
      <Component2 />
    </div>
  );
};

export default function Home() {
  const { data } = useFilmsQuery();

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <p>Films</p>
          <ul>
            {data?.allFilms?.films?.map((f) => (
              <li key={f?.episodeID}>
                <p>Title {f?.title}</p>
                <p>Director {f?.director}</p>
              </li>
            ))}
          </ul>
          <Component1 />
        </div>
      </main>
    </>
  );
}

export const getServerSideProps = async () => {
  const apolloClient = initializeApollo();

  await apolloClient.query({
    query: FilmsDocument,
  });

  await apolloClient.query({
    query: PlanetsDocument,
  });

  return addApolloState(apolloClient, {
    props: {},
  });
};
